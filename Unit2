#Date: 8.26.2024
#Description: Python Lists

'''
Practice 1
Assume you work as a financial analyst and you decide to list 9 divident-paying companies in the US
in a Python list named "dividend_companies"

dividend_companies = ['Pioneer Natural Resources Co. (ticker: PXD)', 
'Lumen Technologies Inc. (LUMN)', 'Altria Group Inc. (MO)', 
'Vornado Realty Trust (VNO)', 'Devon Energy Corp. (DVN)', 
'AT&T Inc. (T)', 'Simon Property Group Inc. (SPG)', 
'Verizon Communications Inc. (VZ)', 'Kinder Morgan Inc. (KMI)']

1. Print first, second and forth elements individually.
2. Print last element using 3 different methods.
3. Print all elements in the list, first 3 elements, and last 3 elements
'''

# first, second and forth elements individually
print(dividend_companies[0])
print(dividend_companies[1])
print(dividend_companies[3])

# print last element
print(dividend_companies[-1])
print(dividend_companies[len(dividend_companies) - 1])

# print first 3 elements and last 3 elements
print(dividend_companies[0:3])
print(dividend_companies[-3:])


'''
Practice 2
Assume that you work as a financial analyst at a pension fund. You decided to list the names of
your 3 top favourite technology stocks along their price in a dictionary.
1. Define the dictionary.
2. Calculate the average stock price listed in the dictionary.
3. Assume that you want to add 2 more stocks to the dictionary, update and calculate the new average
using 2 different methods.
'''

# create initial dictionary
tech_stocks = {"AAPL": 225.2, "NVDA": 126.99, "MSFT": 413.58}

# calculate average stock price
stock_amount = len(tech_stocks)
avg_price = (tech_stocks["AAPL"] + tech_stocks["NVDA"] + tech_stocks["MSFT"]) / stock_amount

# add 2 new stocks
tech_stocks["ORCL"] = 138.68
tech_stocks["CRM"] = 267.05

# calculate new average
avg_price = (tech_stocks["AAPL"] + tech_stocks["NVDA"] + tech_stocks["MSFT"]
             tech_stocks["ORCL"] + tech_stocks["CRM"]) / stock_amount
avg_price

# alternative to calculate average
avg_price = sum(tech_stocks.values()) / len(tech_stocks)


'''
Practice 3
Assume that you work at a bank and you have been tasked to develop a Python code that asks
clients to provide their feedback regarding the bank service and break their input into
individual words. 
1. Prompt client to enter feedback regarding the service and obtain input.
2. Split the client input into words and print on screen.
3. Test your code using 3 different user input.
4. Expand code to request user's email. Then extract the user first name only.
'''

# prompt feedback, obtain input
feedback = input("Welcome, how did we do at the bank today? ")

# split feedback into words
words = feeback.split(" ")
print("Here are the list of words you entered: ", words)

# get email
email = input("Please enter email address: ")
emailoutput = email.split("@")

# get first name
name = emailoutput[0].split(".")
first_name = name[0]
first_name


'''
Practice 4
Consider a company XYZ Inc. whose stock is currently trading at $64/ share. The company requires
a 14% minimum rate of return and pays a dividend of $2 dividend per share this year, which is
expected to increase by 10% annually.
1. Review the Dividend Discount Model.
2. Calculate the Intrinsic value of the stock.
3. Assume that you are evaluating whether to invest in XYZ Inc. or not. Write a python code
that compares the current intinsic value to the stock price and prints out recommendation:
  -overvalued, undervalued, or fairly valued
4. Expand the code so users can enter the current stock price, minimum rate of return, current
dividend, and annual growth and print out recommendation. 
'''

# assign variables
current_market_price = 64
dividend0 = 2
growth_rate = 0.1
cost_of_equity = 0.14

# calculate stock value
stock_value = dividend0 * (1 + growth_rate) / (cost_of_equity - growth_rate)
print("The stock value based on the Dividend Discount Model is ${}" .format(round(stock_value, 2)))

# compare to current market price and give recommendation
if current_market_price > stock_value:
  print("Stock is overpriced. Do not recommend to buy.")
elif current_market_price < stock_value:
  print("Stock is undervalued. Recommend to buy.")
else:
  print("Stock is fairly valued")



